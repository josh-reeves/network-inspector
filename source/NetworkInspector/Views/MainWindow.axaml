<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:models="using:NetworkInspector.Models"
        xmlns:viewModels="using:NetworkInspector.ViewModels"
        xmlns:converters="using:NetworkInspector.Converters"
        mc:Ignorable="d" d:DesignWidth="640" d:DesignHeight="480"
        x:Class="NetworkInspector.Views.MainWindow"
        x:DataType="viewModels:MainWindowViewModel"
        Icon="/Assets/network-inspector.png"
        Title="Network Inspector"
        Width="640"
        Height="480">

    <!-- This only sets the DataContext for the previewer in an IDE, to set the actual DataContext for runtime, set the DataContext property in code 
         (look at App.axaml.cs) -->
    <Design.DataContext>
        <viewModels:MainWindowViewModel/>
    </Design.DataContext>

    <Window.Resources>
        <converters:IPAddressConverter x:Key="IPAddressConverter" />
        <converters:PortListConverter x:Key ="PortListConverter" />
        <converters:StringFormatter x:Key="StringFormatter" />
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <WrapPanel Grid.Row="0"
                   Margin="10"
                   HorizontalAlignment="Center"
                   DockPanel.Dock="Top">

                <StackPanel Orientation="Vertical"
                            Margin="10"
                            Spacing="10">

                    <TextBlock Text="Start IP Address:" 
                               HorizontalAlignment="Left"/>

                    <TextBox Width="200" 
                             HorizontalAlignment="Left"
                             Text="{Binding FirstAddress,
                                    Converter={StaticResource IPAddressConverter},
                                    UpdateSourceTrigger=LostFocus}"/>

                </StackPanel>

                <StackPanel Orientation="Vertical"
                            Margin="10"
                            Spacing="10">

                    <TextBlock Text="End IP Address:" 
                               HorizontalAlignment="Left"/>

                    <StackPanel Orientation="Horizontal"
                                Spacing="10">

                        <TextBox Width="200"
                                 Text="{Binding LastAddress, 
                                        Converter={StaticResource IPAddressConverter}}" />

                        <ComboBox ItemsSource="{Binding CIDRMasks, 
                                                Converter={StaticResource StringFormatter},
                                                ConverterParameter='/{0}'}"
                                  SelectedItem="{Binding CIDRMask,
                                                 Converter={StaticResource StringFormatter},
                                                 ConverterParameter='/{0}'}"/>

                    </StackPanel>

                </StackPanel>

                <StackPanel Orientation="Vertical"
                            Margin="10"
                            Spacing="10">

                    <TextBlock Text="Ports:"/>

                    <TextBox Width="200" 
                             Text="{Binding Ports,
                                    Mode=OneWayToSource,
                                    Converter={StaticResource PortListConverter}, 
                                    ConverterParameter=', '}}"
                             HorizontalAlignment="Left">
                        <TextBox.Styles>
                            <Style Selector="TextBox">
                                <Setter Property="Text" Value="22, 80" />
                            </Style>
                        </TextBox.Styles>
                    </TextBox>

                </StackPanel>

        </WrapPanel>

        <DataGrid Grid.Row="1"
                  Margin="5, 0"
                  BorderThickness="1" 
                  ItemsSource="{Binding ScannedHosts}" 
                  GridLinesVisibility="All" 
                  CanUserResizeColumns="True"
                  IsReadOnly="True"
                  BorderBrush="DarkGray">
            <DataGrid.Columns>
                <DataGridTextColumn Width="Auto" 
                                    Header="Address"
                                    Binding="{Binding Address}" />
                <DataGridTextColumn Width="Auto" 
                                    Header="Status" 
                                    Binding="{Binding Status}" />
                <DataGridTemplateColumn Width="*"
                                        Header="Open Ports">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ItemsControl VerticalAlignment="Center"
                                          Margin="10, 0"
                                          ItemsSource="{Binding OpenPorts}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="models:HostAddress">
                                        <TextBlock Text="{Binding .}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"
                                                    Spacing="10" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

            <DataGrid.Styles>
                <Style Selector="DataGridColumnHeader">
                    <Setter Property="Padding" Value="10, 0, 35, 0" />
                </Style>
            </DataGrid.Styles>
        </DataGrid>

        <Grid Grid.Row="1"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Classes.ScanIsRunning="{Binding ScanIsRunning}">

            <Rectangle HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Width="85"
                    Height="85"
                    Fill="#353535"
                    Opacity="0.50"
                    RadiusX="5"
                    RadiusY="5" />

            <TextBlock  HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="White"
                        FontSize="12"
                        Text="Scanning..." />

            <Grid.Styles>
                <Style Selector="Grid:not(.ScanIsRunning)">
                    <Setter Property="IsVisible" Value="False" />
                </Style>
                <Style Selector="Grid.ScanIsRunning">
                    <Setter Property="IsVisible" Value="True" />
                </Style>
            </Grid.Styles>
        </Grid>

        <Button Grid.Row="2"
                Height="30"
                Width="75"
                Margin="10"
                CornerRadius="5"
                HorizontalAlignment="Center"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Command="{Binding StartScan}">

            <TextBlock Classes.ScanIsRunning="{Binding ScanIsRunning}">
                <TextBlock.Styles>
                    <Style Selector="TextBlock:not(.ScanIsRunning)">
                        <Setter Property="Text" Value="Scan" />
                    </Style>
                    <Style Selector="TextBlock.ScanIsRunning">
                        <Setter Property="Text" Value="Cancel" />
                    </Style>
                </TextBlock.Styles>
            </TextBlock>
            
        </Button>

    </Grid> 

</Window>
